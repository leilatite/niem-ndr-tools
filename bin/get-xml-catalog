#!/usr/bin/env bash

#HELP:COMMAND_NAME: Generate an XML catalog for the listed artifacts
#HELP:Usage: COMMAND_NAME $option* $file1 $file2 ... $fileN
#HELP:Options:
#HELP:  --help | -h: print this help
#HELP:  --verbose | -v: print debugging and status output

root_dir=$(dirname "$0")/..
. "$root_dir/share/wrtools-core/opt_help.bash"
. "$root_dir/share/wrtools-core/opt_verbose.bash"
. "$root_dir/share/wrtools-core/fail.bash"
. "$root_dir/share/wrtools-core/temp.bash"

share_dir=${root_dir}/share/niem-ndr-tools
[[ -d $share_dir ]] || fail "failed to find share dir $share_dir"
get_xsd_target_namespace_xsl=${share_dir}/get-xsd-target-namespace.xsl
[[ -f $get_xsd_target_namespace_xsl && -r $get_xsd_target_namespace_xsl ]] || fail "file not readable file: $get_xsd_target_namespace_xsl"

OPTIND=1
while getopts :hv-: OPTION
do
    case "$OPTION" in
        h ) opt_help;;
        v ) opt_verbose;;
        - )
            case "$OPTARG" in
                help ) opt_help;;
                verbose ) opt_verbose;;
                help=* | verbose=* ) fail "No argument expected for long option \"${OPTARG%%=*}\"";;
                *=* ) fail "Unexpected long option (with argument) \"${OPTARG%%=*}\"";;
                * ) fail "Unexpected long option \"$OPTARG\"";;
            esac;;
        '?' ) fail "Unknown short option \"$OPTARG\"";;
        : ) fail "Short option \"$OPTARG\" missing argument";;
        * ) fail "bad state OPTARG=\"$OPTARG\"";;
    esac
done
shift $((OPTIND-1))

cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog" prefer="public">
EOF

for NAME
do 
    SCHEMA_NAMESPACE=$( xalan --xsl="$get_xsd_target_namespace_xsl" \
                              --in="$NAME" )
    printf "  <uri name=\"%s\" uri=\"%s\"/>\n" "$SCHEMA_NAMESPACE" "$NAME"
done

cat <<EOF
</catalog>
EOF



